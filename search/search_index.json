{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"css/","text":"CSS margin margin is a shorthand property and accepts up to four values ,shown here: .box { margin: || || || } If fewer than four values are set, the missing values are assumed based on the ones that are defined . For example, the following two rule sets would get identical results: ```css .box { margin: 0 1.5em; } .box { margin: 0 1.5em 0 1.5em; } ``` Thus, if only one value is defined, this sets all four margins to the same value . If three values are declared, it is margin: [top] [left-and-right] [bottom]; . Any of the individual margins can be declared using longhand, in which case you would define only one value per property: css .box { margin-top: 20px; margin-right: 10px; margin-bottom: 20px; margin-left: 10px; } Each of the margin properties can also accept a value of auto . A value of auto basically tells the browser to define the margin for you. In most cases, a value of auto will be equivalent to a value of 0 (which is the initial value for each margin property) or else whatever space is available on that side of the element. However, auto is handy for horizontal centering : css .container { width: 980px; margin: 0 auto; } In this example, two things are done to center this element horizontally within the available space: The element is given a specified width The left and right margins are set to auto Without the specified width, the auto values would essentially have no effect , setting the left and right margins to 0 or else to whatever is the available space inside the parent element. It should also be pointed out that auto is useful only for horizontal centering , and so using auto for top and bottom margins will not center an element vertically, which can be confusing for beginners. Collapsing margins Vertical margins on different elements that touch each other (thus have no content, padding, or borders separating them) will collapse, forming a single margin that is equal to the greater of the adjoining margins. This does not happen on horizontal margins (left and right), only vertical (top and bottom). Although collapsing margins may seem unintuitive at first glance, they are actually useful for a few reasons. First, they prevent empty elements from adding extra, usually undesirable, vertical margin space. Second, they allow for a more consistent approach to declaring universal margins across page elements. For example, headings commonly have vertical margin space, and so do paragraphs. If margins didn't collapse, headings that follow paragraphs (or vice-versa) would often require resetting the margins on one of the elements in order to achieve a consistent amount of vertical spacing. Third, margin collapse also applies to nested elements.","title":"Css"},{"location":"css/#css","text":"","title":"CSS"},{"location":"css/#margin","text":"margin is a shorthand property and accepts up to four values ,shown here: .box { margin: || || || } If fewer than four values are set, the missing values are assumed based on the ones that are defined . For example, the following two rule sets would get identical results: ```css .box { margin: 0 1.5em; } .box { margin: 0 1.5em 0 1.5em; } ``` Thus, if only one value is defined, this sets all four margins to the same value . If three values are declared, it is margin: [top] [left-and-right] [bottom]; . Any of the individual margins can be declared using longhand, in which case you would define only one value per property: css .box { margin-top: 20px; margin-right: 10px; margin-bottom: 20px; margin-left: 10px; } Each of the margin properties can also accept a value of auto . A value of auto basically tells the browser to define the margin for you. In most cases, a value of auto will be equivalent to a value of 0 (which is the initial value for each margin property) or else whatever space is available on that side of the element. However, auto is handy for horizontal centering : css .container { width: 980px; margin: 0 auto; } In this example, two things are done to center this element horizontally within the available space: The element is given a specified width The left and right margins are set to auto Without the specified width, the auto values would essentially have no effect , setting the left and right margins to 0 or else to whatever is the available space inside the parent element. It should also be pointed out that auto is useful only for horizontal centering , and so using auto for top and bottom margins will not center an element vertically, which can be confusing for beginners.","title":"margin"},{"location":"css/#collapsing-margins","text":"Vertical margins on different elements that touch each other (thus have no content, padding, or borders separating them) will collapse, forming a single margin that is equal to the greater of the adjoining margins. This does not happen on horizontal margins (left and right), only vertical (top and bottom). Although collapsing margins may seem unintuitive at first glance, they are actually useful for a few reasons. First, they prevent empty elements from adding extra, usually undesirable, vertical margin space. Second, they allow for a more consistent approach to declaring universal margins across page elements. For example, headings commonly have vertical margin space, and so do paragraphs. If margins didn't collapse, headings that follow paragraphs (or vice-versa) would often require resetting the margins on one of the elements in order to achieve a consistent amount of vertical spacing. Third, margin collapse also applies to nested elements.","title":"Collapsing margins"},{"location":"html/","text":"link\u6807\u7b7e crossorigin\uff1a \u8be5\u679a\u4e3e\u5c5e\u6027\u6307\u5b9a\u5728\u52a0\u8f7d\u76f8\u5173\u56fe\u7247\u65f6\u662f\u5426\u5fc5\u987b\u4f7f\u7528CORS\u3002\u53ef\u53d6\u7684\u503c\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a - anonymous\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002\u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002\u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 - use-credentials\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5e26\u6709\u8ba4\u8bc1\u4fe1\u606f (\u53d1\u9001 cookie, X.509 \u8bc1\u4e66\u548c HTTP \u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f) \u7684\u8de8\u57df\u8bf7\u6c42 (\u5373\u5305\u542b Origin: HTTP \u5934). \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1 (\u4e0d\u8bbe\u7f6e Access-Control-Allow-Origin: HTTP \u5934), \u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528. - \u5f53\u4e0d\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6, \u8d44\u6e90\u5c06\u4f1a\u4e0d\u4f7f\u7528 CORS \u52a0\u8f7d (\u5373\u4e0d\u53d1\u9001 Origin: HTTP \u5934), \u8fd9\u5c06\u963b\u6b62\u5176\u5728 \u5143\u7d20\u4e2d\u8fdb\u884c\u4f7f\u7528. \u82e5\u8bbe\u7f6e\u4e86\u975e\u6cd5\u7684\u503c, \u5219\u89c6\u4e3a\u4f7f\u7528 anonymous. [vicrossorigin\uff1a \u8be5\u679a\u4e3e\u5c5e\u6027\u6307\u5b9a\u5728\u52a0\u8f7d\u76f8\u5173\u56fe\u7247\u65f6\u662f\u5426\u5fc5\u987b\u4f7f\u7528CORS\u3002\u53ef\u53d6\u7684\u503c\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a anonymous\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002\u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002\u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 use-credentials\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5e26\u6709\u8ba4\u8bc1\u4fe1\u606f (\u53d1\u9001 cookie, X.509 \u8bc1\u4e66\u548c HTTP \u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f) \u7684\u8de8\u57df\u8bf7\u6c42 (\u5373\u5305\u542b Origin: HTTP \u5934). \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1 (\u4e0d\u8bbe\u7f6e Access-Control-Allow-Origin: HTTP \u5934), \u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528. \u5f53\u4e0d\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6, \u8d44\u6e90\u5c06\u4f1a\u4e0d\u4f7f\u7528 CORS \u52a0\u8f7d (\u5373\u4e0d\u53d1\u9001 Origin: HTTP \u5934), \u8fd9\u5c06\u963b\u6b62\u5176\u5728 \u5143\u7d20\u4e2d\u8fdb\u884c\u4f7f\u7528. \u82e5\u8bbe\u7f6e\u4e86\u975e\u6cd5\u7684\u503c, \u5219\u89c6\u4e3a\u4f7f\u7528 anonymous. integrity\uff1a Subresource Integrity (SRI) is a security feature that enables browsers to verify that files they fetch (for example, from a CDN) are delivered without unexpected manipulation. It works by allowing you to provide a cryptographic hash that a fetched file must match. \u4e2d\u6587\u7248\uff1a \u5b50\u8d44\u6e90\u5b8c\u6574\u6027 (SRI) \u662f\u4e00\u9879\u5b89\u5168\u529f\u80fd\uff0c\u53ef\u8ba9\u6d4f\u89c8\u5668\u9a8c\u8bc1\u5176\u6293\u53d6\u7684\u6587\u4ef6 (\u4f8b\u5982\uff0c\u4ece\u4e00\u4e2a CDN) \u662f\u5728\u6ca1\u6709\u610f\u5916\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u4f20\u9012\u7684\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5141\u8bb8\u60a8\u63d0\u4f9b\u4e00\u4e2a\u83b7\u53d6\u7684\u6587\u4ef6\u5fc5\u987b\u5339\u914d\u7684\u52a0\u5bc6\u6563\u5217/\u54c8\u5e0c\u3002 lable\u6807\u7b7e \u6807\u7b7e\u4e3a input \u5143\u7d20\u5b9a\u4e49\u6807\u6ce8\uff08\u6807\u8bb0\uff09\u3002 label \u5143\u7d20\u4e0d\u4f1a\u5411\u7528\u6237\u5448\u73b0\u4efb\u4f55\u7279\u6b8a\u6548\u679c\u3002\u4e0d\u8fc7\uff0c\u5b83\u4e3a\u9f20\u6807\u7528\u6237\u6539\u8fdb\u4e86\u53ef\u7528\u6027\u3002\u5982\u679c\u60a8\u5728 label \u5143\u7d20\u5185\u70b9\u51fb\u6587\u672c\uff0c\u5c31\u4f1a\u89e6\u53d1\u6b64\u63a7\u4ef6\u3002\u5c31\u662f\u8bf4\uff0c\u5f53\u7528\u6237\u9009\u62e9\u8be5\u6807\u7b7e\u65f6\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u81ea\u52a8\u5c06\u7126\u70b9\u8f6c\u5230\u548c\u6807\u7b7e\u76f8\u5173\u7684\u8868\u5355\u63a7\u4ef6\u4e0a\u3002 \u6807\u7b7e\u7684 for \u5c5e\u6027\u5e94\u5f53\u4e0e\u76f8\u5173\u5143\u7d20\u7684 id \u5c5e\u6027\u76f8\u540c\u3002","title":"Html"},{"location":"html/#link","text":"","title":"link\u6807\u7b7e"},{"location":"html/#crossorigin","text":"\u8be5\u679a\u4e3e\u5c5e\u6027\u6307\u5b9a\u5728\u52a0\u8f7d\u76f8\u5173\u56fe\u7247\u65f6\u662f\u5426\u5fc5\u987b\u4f7f\u7528CORS\u3002\u53ef\u53d6\u7684\u503c\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a - anonymous\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002\u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002\u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 - use-credentials\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5e26\u6709\u8ba4\u8bc1\u4fe1\u606f (\u53d1\u9001 cookie, X.509 \u8bc1\u4e66\u548c HTTP \u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f) \u7684\u8de8\u57df\u8bf7\u6c42 (\u5373\u5305\u542b Origin: HTTP \u5934). \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1 (\u4e0d\u8bbe\u7f6e Access-Control-Allow-Origin: HTTP \u5934), \u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528. - \u5f53\u4e0d\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6, \u8d44\u6e90\u5c06\u4f1a\u4e0d\u4f7f\u7528 CORS \u52a0\u8f7d (\u5373\u4e0d\u53d1\u9001 Origin: HTTP \u5934), \u8fd9\u5c06\u963b\u6b62\u5176\u5728 \u5143\u7d20\u4e2d\u8fdb\u884c\u4f7f\u7528. \u82e5\u8bbe\u7f6e\u4e86\u975e\u6cd5\u7684\u503c, \u5219\u89c6\u4e3a\u4f7f\u7528 anonymous. [vicrossorigin\uff1a \u8be5\u679a\u4e3e\u5c5e\u6027\u6307\u5b9a\u5728\u52a0\u8f7d\u76f8\u5173\u56fe\u7247\u65f6\u662f\u5426\u5fc5\u987b\u4f7f\u7528CORS\u3002\u53ef\u53d6\u7684\u503c\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\uff1a anonymous\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002\u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002\u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 use-credentials\uff1a\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5e26\u6709\u8ba4\u8bc1\u4fe1\u606f (\u53d1\u9001 cookie, X.509 \u8bc1\u4e66\u548c HTTP \u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f) \u7684\u8de8\u57df\u8bf7\u6c42 (\u5373\u5305\u542b Origin: HTTP \u5934). \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1 (\u4e0d\u8bbe\u7f6e Access-Control-Allow-Origin: HTTP \u5934), \u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528. \u5f53\u4e0d\u8bbe\u7f6e\u8be5\u5c5e\u6027\u65f6, \u8d44\u6e90\u5c06\u4f1a\u4e0d\u4f7f\u7528 CORS \u52a0\u8f7d (\u5373\u4e0d\u53d1\u9001 Origin: HTTP \u5934), \u8fd9\u5c06\u963b\u6b62\u5176\u5728 \u5143\u7d20\u4e2d\u8fdb\u884c\u4f7f\u7528. \u82e5\u8bbe\u7f6e\u4e86\u975e\u6cd5\u7684\u503c, \u5219\u89c6\u4e3a\u4f7f\u7528 anonymous.","title":"crossorigin\uff1a"},{"location":"html/#integrity","text":"Subresource Integrity (SRI) is a security feature that enables browsers to verify that files they fetch (for example, from a CDN) are delivered without unexpected manipulation. It works by allowing you to provide a cryptographic hash that a fetched file must match. \u4e2d\u6587\u7248\uff1a \u5b50\u8d44\u6e90\u5b8c\u6574\u6027 (SRI) \u662f\u4e00\u9879\u5b89\u5168\u529f\u80fd\uff0c\u53ef\u8ba9\u6d4f\u89c8\u5668\u9a8c\u8bc1\u5176\u6293\u53d6\u7684\u6587\u4ef6 (\u4f8b\u5982\uff0c\u4ece\u4e00\u4e2a CDN) \u662f\u5728\u6ca1\u6709\u610f\u5916\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u4f20\u9012\u7684\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u5141\u8bb8\u60a8\u63d0\u4f9b\u4e00\u4e2a\u83b7\u53d6\u7684\u6587\u4ef6\u5fc5\u987b\u5339\u914d\u7684\u52a0\u5bc6\u6563\u5217/\u54c8\u5e0c\u3002","title":"integrity\uff1a"},{"location":"html/#lable","text":"\u6807\u7b7e\u4e3a input \u5143\u7d20\u5b9a\u4e49\u6807\u6ce8\uff08\u6807\u8bb0\uff09\u3002 label \u5143\u7d20\u4e0d\u4f1a\u5411\u7528\u6237\u5448\u73b0\u4efb\u4f55\u7279\u6b8a\u6548\u679c\u3002\u4e0d\u8fc7\uff0c\u5b83\u4e3a\u9f20\u6807\u7528\u6237\u6539\u8fdb\u4e86\u53ef\u7528\u6027\u3002\u5982\u679c\u60a8\u5728 label \u5143\u7d20\u5185\u70b9\u51fb\u6587\u672c\uff0c\u5c31\u4f1a\u89e6\u53d1\u6b64\u63a7\u4ef6\u3002\u5c31\u662f\u8bf4\uff0c\u5f53\u7528\u6237\u9009\u62e9\u8be5\u6807\u7b7e\u65f6\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u81ea\u52a8\u5c06\u7126\u70b9\u8f6c\u5230\u548c\u6807\u7b7e\u76f8\u5173\u7684\u8868\u5355\u63a7\u4ef6\u4e0a\u3002 \u6807\u7b7e\u7684 for \u5c5e\u6027\u5e94\u5f53\u4e0e\u76f8\u5173\u5143\u7d20\u7684 id \u5c5e\u6027\u76f8\u540c\u3002","title":"lable\u6807\u7b7e"},{"location":"json-server/","text":"json-server \u4e00\u4e2amock\u5de5\u5177\u3002 mock server\u5de5\u5177\uff0c\u6a21\u62df\u670d\u52a1\u7aef\u63a5\u53e3\u6570\u636e\uff0c\u4e00\u822c\u7528\u5728\u524d\u540e\u7aef\u5206\u79bb\u540e\uff0c\u524d\u7aef\u4eba\u5458\u53ef\u4ee5\u4e0d\u4f9d\u8d56API\u5f00\u53d1\uff0c\u800c \u5728\u672c\u5730\u642d\u5efa\u4e00\u4e2aJSON\u670d\u52a1 \uff0c\u81ea\u5df1\u4ea7\u751f\u6d4b\u8bd5\u6570\u636e\u3002\uff08json\u2014\u2014\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002\uff09 \uff08\u611f\u89c9\u4e0a\uff09\u5728.json\u6587\u4ef6\u4e2d\u53ef\u4ee5\u52a0\u5165\u81ea\u5df1\u6a21\u62df\u7684\u540e\u53f0\u6570\u636e\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u524d\u7aef\u4f7f\u7528\u3002 \u52a0\u5165\u6570\u636e\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u5199\u5165\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u8bed\u8a00\u7684\u63a5\u53e3\u5199\u5165\uff08\u5982\uff1ajs\u4e2dfetch\u5230\u9875\u9762\u63d0\u4ea4\u7684\u6570\u636e\u540e\u7528stringify()\u5c06\u5176\u8f6c\u6362\u4e3ajson\u683c\u5f0f\uff0c\u7136\u540e\u5b58\u5165.json\u6587\u4ef6\u4e2d\uff09","title":"Json-server"},{"location":"json-server/#json-server","text":"\u4e00\u4e2amock\u5de5\u5177\u3002 mock server\u5de5\u5177\uff0c\u6a21\u62df\u670d\u52a1\u7aef\u63a5\u53e3\u6570\u636e\uff0c\u4e00\u822c\u7528\u5728\u524d\u540e\u7aef\u5206\u79bb\u540e\uff0c\u524d\u7aef\u4eba\u5458\u53ef\u4ee5\u4e0d\u4f9d\u8d56API\u5f00\u53d1\uff0c\u800c \u5728\u672c\u5730\u642d\u5efa\u4e00\u4e2aJSON\u670d\u52a1 \uff0c\u81ea\u5df1\u4ea7\u751f\u6d4b\u8bd5\u6570\u636e\u3002\uff08json\u2014\u2014\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002\uff09 \uff08\u611f\u89c9\u4e0a\uff09\u5728.json\u6587\u4ef6\u4e2d\u53ef\u4ee5\u52a0\u5165\u81ea\u5df1\u6a21\u62df\u7684\u540e\u53f0\u6570\u636e\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u524d\u7aef\u4f7f\u7528\u3002 \u52a0\u5165\u6570\u636e\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u5199\u5165\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u8bed\u8a00\u7684\u63a5\u53e3\u5199\u5165\uff08\u5982\uff1ajs\u4e2dfetch\u5230\u9875\u9762\u63d0\u4ea4\u7684\u6570\u636e\u540e\u7528stringify()\u5c06\u5176\u8f6c\u6362\u4e3ajson\u683c\u5f0f\uff0c\u7136\u540e\u5b58\u5165.json\u6587\u4ef6\u4e2d\uff09","title":"json-server"}]}